시스템프로그래밍기초 12주차

이중 포인터
- 그냥 포인터를 또 포인터로 지칭한거임
int x = 20;
int *p = &x;
int* *dp = &p;

-> dp는 p의 주소만 보임 
  *dp(dp를 참조)하면 x의 주소를 알 수 있음
-> 그리고 *dp는 x의 주소만 보임
  **dp, *p을 하면 x의 값을 알 수 있음

동적할당
- heap영역에 할당
- 메모리 할당 요청 / 빈공간 확인 / 메모리 할당 / 메모리 반납
- 할당까지는 malloc()함수로 처리함 / calloc, realloc도 있음
- 반납은 free()로 함

malloc
- 괄호 안에 필요한 메모리의 크기를 입력받음
- 할당된 메모리의 주소(포인터)를 리턴함
- 해당 malloc함수의 리턴을 받은 포인터를 free함수에 입력하여 메모리를 반납함
- malloc함수는 포인터의 형식을 정해주지 않기 때문에(void pointer 리턴) 해당 포인터의 형변환을 할 필요가 있음

